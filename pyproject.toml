[tool.poetry]
name = "tap-linkedin-ads"
version = "0.0.1"
description = "`tap-linkedin-ads` is a Singer tap for linkedin, built with the Meltano SDK for Singer Taps."
authors = ["Meltano"]
keywords = [
    "ELT",
    "linkedin",
]
license = "Apache 2.0"

[tool.poetry.dependencies]
python = "<3.11,>=3.7.1"
pendulum = "^2.1.2"
requests = "^2.29.0"
singer-sdk = "^0.27.0"

[tool.poetry.dev-dependencies]
pytest = "^7.3.1"
singer-sdk = {version = "^0.27.0", extras = ["testing"]}

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "tap_linkedin_ads"

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
tap-linkedin-ads = 'tap_linkedin_ads.tap:TapLinkedInAds.cli'

[tool.ruff]
ignore = [
    "ANN101",  # Missing type annotation for self in method
    "DJ",  # Django
    "PD",  # Pandas
    "D101",  # Missing docstring in public class
    "D102"  # Missing docstring in public method
]
line-length = 100
select = ["ALL"]
target-version = "py37"

[tool.ruff.flake8-import-conventions]
banned-from = ["typing"]

[tool.ruff.flake8-import-conventions.extend-aliases]
typing = "t"

[tool.ruff.per-file-ignores]
"tests/*" = [
    "ANN201",  # Missing return type annotation for public function
]

[tool.ruff.pydocstyle]
convention = "google"
